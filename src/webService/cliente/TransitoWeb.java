
package webService.cliente;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TransitoWeb", targetNamespace = "http://webService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TransitoWeb {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "connectSemaforo", targetNamespace = "http://webService/", className = "webService.cliente.ConnectSemaforo")
    @ResponseWrapper(localName = "connectSemaforoResponse", targetNamespace = "http://webService/", className = "webService.cliente.ConnectSemaforoResponse")
    @Action(input = "http://webService/TransitoWeb/connectSemaforoRequest", output = "http://webService/TransitoWeb/connectSemaforoResponse")
    public void connectSemaforo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "connectVia", targetNamespace = "http://webService/", className = "webService.cliente.ConnectVia")
    @ResponseWrapper(localName = "connectViaResponse", targetNamespace = "http://webService/", className = "webService.cliente.ConnectViaResponse")
    @Action(input = "http://webService/TransitoWeb/connectViaRequest", output = "http://webService/TransitoWeb/connectViaResponse")
    public void connectVia(
        @WebParam(name = "arg0", targetNamespace = "")
        Via arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "CanOpen")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CanOpen", targetNamespace = "http://webService/", className = "webService.cliente.CanOpen")
    @ResponseWrapper(localName = "CanOpenResponse", targetNamespace = "http://webService/", className = "webService.cliente.CanOpenResponse")
    @Action(input = "http://webService/TransitoWeb/CanOpenRequest", output = "http://webService/TransitoWeb/CanOpenResponse")
    public boolean canOpen(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<webService.cliente.Via>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVias", targetNamespace = "http://webService/", className = "webService.cliente.GetVias")
    @ResponseWrapper(localName = "getViasResponse", targetNamespace = "http://webService/", className = "webService.cliente.GetViasResponse")
    @Action(input = "http://webService/TransitoWeb/getViasRequest", output = "http://webService/TransitoWeb/getViasResponse")
    public List<Via> getVias();

}
